# test_compute25.py

import unittest
from compute25 import compute25

class TestCompute25(unittest.TestCase):
    def test_compute25_cases_with_solution(self):
        self.assertEqual(eval(compute25("8251")), 25)
        self.assertEqual(eval(compute25("9735")), 25)
        self.assertEqual(eval(compute25("1821")), 25)
        self.assertEqual(eval(compute25("3515")), 25)
        self.assertEqual(eval(compute25("2365")), 25)
        self.assertEqual(eval(compute25("4249")), 25)
        self.assertEqual(eval(compute25("2837")), 25)
        self.assertEqual(eval(compute25("7191")), 25)
        self.assertEqual(eval(compute25("1259")), 25)
        self.assertEqual(eval(compute25("1674")), 25)
        self.assertEqual(eval(compute25("4519")), 25)
        self.assertEqual(eval(compute25("4667")), 25)
        self.assertEqual(eval(compute25("4716")), 25)
        self.assertEqual(eval(compute25("4215")), 25)
        self.assertEqual(eval(compute25("4349")), 25)
        self.assertEqual(eval(compute25("8722")), 25)
        self.assertEqual(eval(compute25("5517")), 25)
        self.assertEqual(eval(compute25("4416")), 25)
        self.assertEqual(eval(compute25("9135")), 25)
        self.assertEqual(eval(compute25("5513")), 25)
        self.assertEqual(eval(compute25("3899")), 25)
        self.assertEqual(eval(compute25("3396")), 25)
        self.assertEqual(eval(compute25("6477")), 25)
        self.assertEqual(eval(compute25("3476")), 25)
        self.assertEqual(eval(compute25("8743")), 25)
        self.assertEqual(eval(compute25("1888")), 25)
        self.assertEqual(eval(compute25("3718")), 25)
        self.assertEqual(eval(compute25("4355")), 25)
        self.assertEqual(eval(compute25("2723")), 25)
        self.assertEqual(eval(compute25("2681")), 25)
        self.assertEqual(eval(compute25("3176")), 25)
        self.assertEqual(eval(compute25("9592")), 25)
        self.assertEqual(eval(compute25("6173")), 25)
        self.assertEqual(eval(compute25("8755")), 25)
        self.assertEqual(eval(compute25("1729")), 25)
        self.assertEqual(eval(compute25("3761")), 25)
        self.assertEqual(eval(compute25("5878")), 25)
        self.assertEqual(eval(compute25("9289")), 25)
        self.assertEqual(eval(compute25("6152")), 25)
        self.assertEqual(eval(compute25("7633")), 25)
        self.assertEqual(eval(compute25("7135")), 25)
        self.assertEqual(eval(compute25("4523")), 25)
        self.assertEqual(eval(compute25("9328")), 25)
        self.assertEqual(eval(compute25("5195")), 25)
        self.assertEqual(eval(compute25("5755")), 25)
        self.assertEqual(eval(compute25("7656")), 25)
        self.assertEqual(eval(compute25("9537")), 25)
        self.assertEqual(eval(compute25("2692")), 25)
        self.assertEqual(eval(compute25("6674")), 25)
        self.assertEqual(eval(compute25("3384")), 25)
        self.assertEqual(eval(compute25("4698")), 25)
        self.assertEqual(eval(compute25("3642")), 25)
        self.assertEqual(eval(compute25("8239")), 25)
        self.assertEqual(eval(compute25("4921")), 25)
        self.assertEqual(eval(compute25("5179")), 25)
        self.assertEqual(eval(compute25("4277")), 25)
        self.assertEqual(eval(compute25("9587")), 25)
        self.assertEqual(eval(compute25("1394")), 25)
        self.assertEqual(eval(compute25("4331")), 25)
        self.assertEqual(eval(compute25("2329")), 25)
        self.assertEqual(eval(compute25("7831")), 25)
        self.assertEqual(eval(compute25("2537")), 25)
        self.assertEqual(eval(compute25("6267")), 25)
        self.assertEqual(eval(compute25("8153")), 25)
        self.assertEqual(eval(compute25("5487")), 25)
        self.assertEqual(eval(compute25("2373")), 25)
        self.assertEqual(eval(compute25("2237")), 25)
        self.assertEqual(eval(compute25("7945")), 25)
        self.assertEqual(eval(compute25("8983")), 25)
        self.assertEqual(eval(compute25("7583")), 25)
        self.assertEqual(eval(compute25("8237")), 25)
        self.assertEqual(eval(compute25("1368")), 25)

    def test_compute25_cases_with_solution_exception(self):
        #self.assertEqual(abs(eval(compute25("8685"))), 25) # este da -25: (((8 / 8) - 6) * 5)
        pass

    def test_compute25_cases_without_solution(self):
        self.assertEqual(compute25("6153"), "SIN SOLUCIÓN")
        self.assertEqual(compute25("2544"), "SIN SOLUCIÓN")
        self.assertEqual(compute25("8716"), "SIN SOLUCIÓN")
        self.assertEqual(compute25("1669"), "SIN SOLUCIÓN")
        self.assertEqual(compute25("2897"), "SIN SOLUCIÓN")
        self.assertEqual(compute25("1331"), "SIN SOLUCIÓN")
        self.assertEqual(compute25("7179"), "SIN SOLUCIÓN")
        self.assertEqual(compute25("4448"), "SIN SOLUCIÓN")
        self.assertEqual(compute25("6956"), "SIN SOLUCIÓN")
        self.assertEqual(compute25("8779"), "SIN SOLUCIÓN")
        self.assertEqual(compute25("2663"), "SIN SOLUCIÓN")
        self.assertEqual(compute25("7166"), "SIN SOLUCIÓN")
        self.assertEqual(compute25("9689"), "SIN SOLUCIÓN")
        self.assertEqual(compute25("8564"), "SIN SOLUCIÓN")
        self.assertEqual(compute25("1779"), "SIN SOLUCIÓN")
        self.assertEqual(compute25("5717"), "SIN SOLUCIÓN")
        self.assertEqual(compute25("7329"), "SIN SOLUCIÓN")
        self.assertEqual(compute25("4199"), "SIN SOLUCIÓN")
        self.assertEqual(compute25("5618"), "SIN SOLUCIÓN")
        self.assertEqual(compute25("8797"), "SIN SOLUCIÓN")
        self.assertEqual(compute25("8739"), "SIN SOLUCIÓN")
        self.assertEqual(compute25("7737"), "SIN SOLUCIÓN")
        self.assertEqual(compute25("6861"), "SIN SOLUCIÓN")
        self.assertEqual(compute25("2446"), "SIN SOLUCIÓN")
        self.assertEqual(compute25("4624"), "SIN SOLUCIÓN")
        self.assertEqual(compute25("6448"), "SIN SOLUCIÓN")
        self.assertEqual(compute25("8885"), "SIN SOLUCIÓN")

if __name__ == "__main__":
    unittest.main()